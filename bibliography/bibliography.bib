@phdthesis{eisenberg2016,
	author = "Richard Eisenberg",
	title = "Dependent Types in Haskell: Theory and Practice.",
	year = 2016,
	school = "University of Pennsylvania",
	annotate = "Richard Eisenberg's work, as mentioned in the thesis proposal, provides an account of how dependent types would look in Haskell. He also provides examples of practical applications of dependent types, such as a type-safe database. This work forms one of the foundations of my research."
}

@phdthesis{gundry2013,
	author = "Adam Michael Gundry",
	title = "Type Inference, Haskell and Dependent Types",
	year = 2013,
	school = "University of Strathclyde",
	annotate = "As mentioned in the thesis proposal, Gundry provides an earlier proposal for how dependent types could look in Haskell. Like Eisenberg, Gundry provides examples of dependent type applications such as removing unit conversion errors, which I describe briefly in my proposal.",
}

@article{mcbride2014,
	author = "Conor McBride",
	title = "How to Keep Your Neighbours In Order",
	year = 2014,
	school = "University of Strathclyde"
}

@article{kennedy2009,
	author = "Andrew Kennedy",
	title = "Types for Units-of-Measure",
	year = 2009,
	journal = "Proceedings of the Third Summer Conference of the Central European Functional Programming School",
	annotate = "I cite this while discussing current support for units of measure in F\#. One potential path for my thesis is to explore units of measurement with dependent types. Such a thesis would involve drawing from how F\# implements units of measurement.",
}

@article{hotz1999,
	author = "Robert Lee Hotz",
	title = "Mars Probe Lost Due to Simple Math Error",
	journal = "Los Angeles Times",
	year = 1999,
	annotate = "I am only citing this to show an example of what would happen in a worst-case unit conversion error.",
}
@inproceedings{fstar_distributed_programming,
	author = {Swamy, Nikhil and Chen, Juan and Fournet, C{\'e}dric and Strub, Pierre-Yves and Bhargavan, Karthikeyan and Yang, Jean},
	title = {Secure Distributed Programming with Value-dependent Types},
	booktitle = {Proceedings of the 16th ACM SIGPLAN International Conference on Functional Programming},
	series = {ICFP '11},
	year = {2011},
	isbn = {978-1-4503-0865-6},
	location = {Tokyo, Japan},
	pages = {266--278},
	numpages = {13},
	url = {http://doi.acm.org/10.1145/2034773.2034811},
	doi = {10.1145/2034773.2034811},
	acmid = {2034811},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {refinement types, security types},
} 

@article{agda1,
	author = "Ana Bove and Peter Dybjer and Ulf Norell",
	title = "A Brief Overview of Agda - A Functional Language with Dependent Types",
	year = 2009,
	school = "Chalmers University of Technology, Gothenburg, Sweden",
	journal = "Theorem Proving in Higher Order Logics",
	annotate = "I cite this to show how current work exists to implement dependent types in the Agda programming language. It may contain applications of dependent types that I find useful. ",
}
@article{agda2,
	author = "Ulf Norell",
	title = "Dependently Typed Programming in Agda",
	year = 2009,
	school = "Chalmers University of Technology, Gothenburg, Sweden",
	journal = "International Workshop on Types in Language Design and Implementation",
	annotate = "I cite this to show dependent types exist in the Agda programming language.",
}

@book{coq1,
	author = "Adam Chlipala",
	title = "Certified Programming with Dependent Types",
	year = 2013,
	annotate = "I cite this to show that dependent types exist in the Agda programming language.",
}

@article{idris_systems_programming,
	author = "Edwin C. Brady",
	title = "Idris: Systems Programming Meets Full Dependent Types",
	year = 2011,
	journal = "ACM Workshop on Programming Languages Meets Program Verification",
	annotate = "I cite this to demonstrate that dependent types exist in the Idris programming language. In addition, an intersection between dependent types and systems programming may be worth exploring."
}

@article{aus_senate,
	author = "Berj Chilingirian and Zara Perumal and Ronald L. Rivest and Grahame Bowland and Andrew Conway and Philip B. Stark and Michelle Blom and Chris Culnane and Vanessa Teague",
	title = "Auditing Australian Senate Ballots",
	year = 2016,
	school = "Computer Science and Artificial Intelligence Laboratory at the Massachusetts Institute of Technology and Department of Statistics, University of California Berkeley and Department of Computing and Information Systems, University of Melbourne.",
	annotate = "I cite this to show that auditing Australian Senate Ballots is currently an NP-complete problem. Through type-safe programming, I aim to sidestep this lengthy process. In this paper, Bayesian audits are proposed instead of a full audit in order to get a verifiable result with some degree of mathematical precision."
}

@article{aus_senate_news, 
	author = "Josh Taylor",
	title = "Senate Calls for Release of AEC Vote Count Source Code",
	year = 2014, 
	journal = "ZDNet",
	annotate = "Cited to show that the current code for the Australian Senate vote counting program is proprietary.",
}

@article{power_of_pi,
	author = "Nicolas Oury and Wouter Swiestra",
	title = "The Power of Pi",
	year = 2008,
	journal = "ACM SigPlan Notices",
	annotate = "Cited to show applications of DSLs to dependent types.",
}

@book {cryptol_manual,
	author = "Galois Inc",
	title = "Cryptol Reference Manual",
	year = 2002,
	annotate = "I'm implementing part of a Cryptol compiler in Idris as part of my literature review. This provides a handy reference to the Cryptol programming language."
}

@misc{pmb_spec,
	title = "The PBM Format", 
	howpublished = {\url{http://netpbm.sourceforge.net/doc/pbm.html}},
	note = {Accessed: 2017-10-25},
	annotate = "This provides a specification for the PBM file format, which I'm trying to parse in my literature review."
}

@article{ml_type_theory,
	title = {An Intuitionistic Theory of Types},
	author = {Per Martin-L{\"o}f},
	journal = {Unpublished Preprint},
	year = 1972,
}

@book{intro_martin_lof,
	title = {Programming in Martin-L{\"o}f's Type Theory: An Introduction},
	author = {Bengt Nordstrom and Kent Petersson and Jan M. Smith},
	year = 1990,
	publisher = {Oxford University Press},
	annotate = {An introduction to Martin-L{\"รถ}f Type Theory, which serves as the theoretical foundation for dependent types.}
}

@article{nuprl,
	title = "Implementing Mathematics with The Nuprl Proof Development System",
	author = "R.L. Constable and S.F. Allen and H.M. Bromley and W.R. Cleaveland and J.F. Cremer and R.W. Harper and D.J. Howe and T.B. Knoblock and N.P. Mendler and P. Panangaden and J.T. Sasaki and S.F. Smith",
	year = 1985,
	annotate = "A paper that discusses the NuPRL theorem prover. I cite this in my discussion on the history of dependent types."
}

@misc{prl_home,
	title = "The Nature of the PRL Project",
	howpublished = {\url{http://www.nuprl.org/Intro/intro.html"}},
	note = {Accessed: 2017-10-28},
	annotate = "Also cited in my discussion on the history of dependent types."
}

@book{girard1989proofs,
	title={Proofs and Types},
	author={Girard, J.Y. and Lafont, Y. and Taylor, P.},
	isbn={9780521371810},
	lccn={gb89006177},
	series={Cambridge Tracts in Theoretical Computer Science},
	url={https://books.google.com/books?id=6JOEQgAACAAJ},
	year={1989},
	publisher={Cambridge University Press},
	annotate = "Cited in my section on the history of dependent types when discussing Agda, a theorem prover and programming language."
}

@book{tdd_book,
	title = "Type-Driven Development with Idris",
	author = "Edwin Brady",
	year = 2017,
	publisher = "Manning Publications",
	annotate = "I've been reading through this book to pick up Idris, which is a dependently typed general-purpose programming language."
}

@article{fstar_distributed_programming,
	title = "Secure Distributed Programming with Value-Dependent Types",
	author = "Nikhil Swamy and Juan Chen and Cedric Fournet and Pierre-Yves Strub and Karthikeyan Bhargavan and Jean Yang",
	year = 2011,
	annotate = "F\*'s utility in distributed programming makes it yet another interesting case of practical uses of dependent types. I'll be reading this paper and summarizing it for my literature review."
}

@misc{idris_pop,
	title = "the-power-of-pi, Cryptol.lidr",
	author = "Eric Bailey",
	year = 2016,
	annotate = "This is an implementation of the power of pi cryptol compiler and PBM parser but in the Idris general-purpose dependently typed programming language."
}

@misc{f_sharp_units,
	title = "Units of Measure",
	author = "Philip Carter and Luke Latham and Maira Wenzel",
	year = 2016, 
	annotate = "I give a brief overview of units of measure in F\#. This is official Microsoft documentation on how they appear in F\#"
}

@misc{Magnusson95theimplementation,
    author = {Lena Magnusson},
    title = {The Implementation of ALF - a Proof Editor based on Martin-L{\"o}f's Monomorphic Type Theory with Explicit Substitution},
    year = {1995},
	annotate = "Cited when I reference ALF in a history of dependent types."
}

@article{structured_type_theory,
	author = "Catarina Coquand and Thierry Coquand",
	title = "Structured Type Theory",
	year = 1999,
	annotate = "Cited when I discuss Agda in the history of dependent types."
}

@misc{idris_dependent_pairs,
	author = {Jan de Muijnck-Hughes},
	title = {Types and Functions},
	year = 2015,
	annotate = "Cited when I introduce the concept of dependent pairs in Idris."
}

@article{Augustsson:1998:CLD:291251.289451,
	author = {Lennart Augustsson},
	title = {Cayenne Language with Dependent Types},
	journal = {SIGPLAN Not.},
	issue_date = {Jan. 1999},
	volume = {34},
	number = {1},
	month = sep,
	year = {1998},
	issn = {0362-1340},
	pages = {239--250},
	numpages = {12},
	url = {http://doi.acm.org/10.1145/291251.289451},
	doi = {10.1145/291251.289451},
	acmid = {289451},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {dependent types, language design, module systems, type systems},
	annotate = {Cited when I discuss the history of theorem provers. Cayenne was a theorem prover created in the late '90s and so is relevant in this discussion.}
}

@article{tao,
	author = {Nathan Bronson and Zach Amsden and George Cabrera and Prasad Chakka and Peter Dimov and Hui Ding and Jack Ferris and Anthony Giardullo and Sachin Kulkarni and Harry Li and Mark Marchukov and Dmitri Petrov and Lovro Puzar and Yee Jiun Song and Venkat Venkataramani},
	title = {{TAO}: Facebook{\textquoteright}s Distributed Data Store for the Social Graph},
	booktitle = {Presented as part of the 2013 {USENIX} Annual Technical Conference ({USENIX} {ATC} 13)},
	year = {2013},
	isbn = {978-1-931971-01-0},
	address = {San Jose, CA},
	pages = {49--60},
	url = {https://www.usenix.org/conference/atc13/technical-sessions/presentation/bronson},
	publisher = {{USENIX}},
}

@incollection{martin_lof,
	title = "Constructive Mathematics and Computer Programming",
	editor = "L. Jonathan Cohen and Jerzy ลoล and Helmut Pfeiffer and Klaus-Peter Podewski",
	series = "Studies in Logic and the Foundations of Mathematics",
	publisher = "Elsevier",
	volume = "104",
	number = "Supplement C",
	pages = "153 - 175",
	year = "1982",
	booktitle = "Logic, Methodology and Philosophy of Science VI",
	issn = "0049-237X",
	doi = "https://doi.org/10.1016/S0049-237X(09)70189-2",
	url = "http://www.sciencedirect.com/science/article/pii/S0049237X09701892",
	author = {Per Martin-L{\"o}f},
	annotate = "This is the paper where Per Martin-L{\"รถ}f introduces Martin-L{\"รถ}f type theory, which serves as a theoretical underpinning for modern-day dependent type implementations in Idris and Agda."
}

@article{constructive_math,
	title = "Constructive Mathematics",
	author = "Maarten McKubre-Jordens",
	annotate = "Constructive math is one of the theoretical underpinnings of dependent types. I cite this article as a general introduction to the theoretical background in constructive math."
}

@article{algebraic,
	title = "Programming and Reasoning with Algebraic Effects and Dependent Types",
	author = "Edwin C. Brady",
	year = 2013,
	journal = "Proceedings of the 18th ACM SIGPLAN International Conference on Functional Programming",
	series = "ICFP '13"
}

@article{flights,
 author = {Unterbrunner, P. and Giannikis, G. and Alonso, G. and Fauser, D. and Kossmann, D.},
 title = {Predictable Performance for Unpredictable Workloads},
 journal = {Proc. VLDB Endow.},
 issue_date = {August 2009},
 volume = {2},
 number = {1},
 month = aug,
 year = {2009},
 issn = {2150-8097},
 pages = {706--717},
 numpages = {12},
 url = {http://dx.doi.org/10.14778/1687627.1687707},
 doi = {10.14778/1687627.1687707},
 acmid = {1687707},
 publisher = {VLDB Endowment},
}